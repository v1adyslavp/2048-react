{"version":3,"sources":["App.js","index.js"],"names":["App","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","props","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","field","getSmthFromStorage","currentScore","bestScore","isGameActive","isWin","isLose","handleKeyDown","bind","assertThisInitialized","document","addEventListener","spawnTiles","setState","count","_this2","freeCells","finalCells","row","col","push","i","cellToSpawn","Math","floor","random","splice","prevState","newField","toConsumableArray","_i","_finalCells","cell","_cell","slicedToArray","generateNewTileValue","localStorage","setItem","isActive","JSON","stringify","event","key","includes","preventDefault","handleMove","moveKey","_this3","fieldAfterMove","shiftedRow","filter","collapseSameTiles","unshift","transcendedField","isEqual","direction","collapsableRow","applyWithNewTileCollapsed","collapsedTile","_this4","isWinStatus","nextScore","removeEventListener","pendingField","_this5","byField","elseValue","fromStorage","getItem","parse","_this6","_this$state","react_default","a","createElement","className","onClick","newGameHandler","keepGoingHandler","map","j","data-tile-value","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.58157c61.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {isEqual} from 'lodash';\n\nclass App extends Component {\n  constructor(...props) {\n    super(...props);\n\n    this.state = {\n      field: this.getSmthFromStorage('field', [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ]),\n      currentScore: +this.getSmthFromStorage('currentScore', 0),\n      bestScore: +this.getSmthFromStorage('bestScore', 0),\n      isGameActive: this.getSmthFromStorage('isActive', false),\n      isWin: this.getSmthFromStorage('isWin', 'false'),\n      isLose: this.getSmthFromStorage('isLose', false),\n    };\n\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentWillMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentDidMount() {\n    let {isGameActive} = this.state;\n\n    if (!isGameActive) {\n      this.spawnTiles(2);\n      this.setState({isGameActive: true})\n    }\n  }\n\n  spawnTiles(count) {\n    let {field} = this.state;\n    let freeCells = [];\n    let finalCells = [];\n\n    for (let row = 0; row<4; row++) {\n      for (let col = 0; col<4; col++) {\n        if (field[row][col] === 0) {\n          freeCells.push([row, col])\n        }\n      }\n    }\n\n    for (let i = 0; i < count; i++) {\n      let cellToSpawn = Math.floor(Math.random() * freeCells.length);\n\n      finalCells.push(freeCells.splice(cellToSpawn, 1)[0]);\n    }\n\n    this.setState(prevState => {\n      let newField = [...prevState.field];\n\n      for (let cell of finalCells) {\n        let [row, col] = cell;\n        newField[row][col] = this.generateNewTileValue();\n      }\n\n      return {\n        field: newField\n      }\n    }, () => {\n      let {field} = this.state;\n\n      if (this.isLose(field)) {\n        localStorage.setItem('isLose', 'true');\n\n        this.setState({\n          isLose: true,\n          isActive: false\n        });\n      }\n\n      localStorage.setItem('field', JSON.stringify(field));\n      localStorage.setItem('isActive', 'true');\n    })\n\n  }\n\n  generateNewTileValue() {\n    let number = Math.floor(Math.random() * 10) + 1;\n\n    if (number === 1) {\n      return 4;\n    } else {\n      return 2;\n    }\n  }\n\n  handleKeyDown(event) {\n    let availableKeys = ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n    let {key} = event;\n\n    if (!availableKeys.includes(key)) {\n      return;\n    }\n\n    // prevents scrolling by arrows when viewport is smaller than content\n    event.preventDefault();\n\n    this.handleMove(key);\n  }\n\n  handleMove(moveKey) {\n    let {field} = this.state;\n    let fieldAfterMove = [];\n\n    if (moveKey === 'ArrowRight' || moveKey === 'ArrowLeft') {\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = field[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowRight') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowLeft') {\n            shiftedRow.push(0);\n          }\n        }\n\n        fieldAfterMove.push(shiftedRow);\n      }\n    } else if (moveKey === 'ArrowUp' || moveKey === 'ArrowDown') {\n      let transcendedField = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          if (field[row][col] !== 0) {\n            transcendedField[col].push(field[row][col]);\n          }\n        }\n      }\n\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = transcendedField[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowDown') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowUp') {\n            shiftedRow.push(0);\n          }\n        }\n\n        transcendedField[row] = shiftedRow;\n      }\n\n      fieldAfterMove = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          fieldAfterMove[row].push(\n            transcendedField[col][row]\n          );\n        }\n      }\n    }\n\n    if (isEqual(field, fieldAfterMove)) {\n      // no move has been done\n      return;\n    }\n\n    this.setState({field: fieldAfterMove}, () => {\n      this.spawnTiles(1);\n    });\n\n  }\n\n  collapseSameTiles(row, direction) {\n    let collapsableRow = [...row];\n\n    if (direction === 'ArrowRight' || direction === 'ArrowDown') {\n      for (let i = collapsableRow.length - 1; i > 0; i--) {\n        if (collapsableRow[i] === collapsableRow[i-1]) {\n          collapsableRow[i] += collapsableRow[i];\n          collapsableRow[i-1] = 0;\n\n          this.applyWithNewTileCollapsed(collapsableRow[i]);\n        }\n\n      }\n    } else if (direction === 'ArrowLeft' || direction === 'ArrowUp') {\n      for (let i = 0; i < collapsableRow.length - 1; i++) {\n        if (collapsableRow[i] === collapsableRow[i+1]) {\n          collapsableRow[i] += collapsableRow[i];\n          collapsableRow[i+1] = 0;\n\n          this.applyWithNewTileCollapsed(collapsableRow[i]);\n        }\n      }\n    }\n\n    collapsableRow = collapsableRow.filter(col => col > 0);\n\n    return collapsableRow;\n  }\n\n  applyWithNewTileCollapsed(collapsedTile) {\n    this.setState((prevState) => {\n      let isWinStatus;\n      let nextScore = prevState.currentScore + collapsedTile;\n      localStorage.setItem('currentScore', nextScore);\n\n      if (nextScore > prevState.bestScore) {\n        localStorage.setItem('bestScore', nextScore);\n      }\n\n      if (prevState.isWin === 'false' && collapsedTile === 2048) {\n        document.removeEventListener('keydown', this.handleKeyDown);\n        isWinStatus = 'true';\n      } else if (prevState.isWin === 'keep') {\n        isWinStatus = 'keep';\n      } else {\n        isWinStatus = prevState.isWin;\n      }\n\n      localStorage.setItem('isWin', JSON.stringify(isWinStatus));\n\n      return {\n        currentScore: nextScore,\n        bestScore: nextScore > prevState.bestScore ? nextScore : prevState.bestScore,\n        isWin: isWinStatus\n      }\n    });\n  }\n\n  isLose(pendingField) {\n    for (let row=0; row<4; row++) {\n      for (let col=0; col<4; col++) {\n        if (pendingField[row][col] === 0) {\n          return false\n        }\n\n        if (pendingField[row][col] === pendingField[row][col+1]) {\n          return false;\n        }\n\n        if (row === 3) {\n          continue\n        }\n\n        if (pendingField[row][col] === pendingField[row+1][col]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  newGameHandler() {\n    let { isWin } = this.state;\n\n    localStorage.setItem('currentScore', '0');\n    localStorage.setItem('isWin', '\"false\"');\n    localStorage.setItem('isLose', 'false');\n\n    if (isWin === 'true') {\n      document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    this.setState({\n      field: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      currentScore: 0,\n      isWin: 'false',\n      isLose: false,\n    }, () => {\n      this.spawnTiles(2);\n    });\n  }\n\n  keepGoingHandler() {\n    document.addEventListener('keydown', this.handleKeyDown);\n    localStorage.setItem('isWin', '\"keep\"');\n\n    this.setState({\n      isWin: 'keep'\n    })\n  }\n\n  getSmthFromStorage(byField, elseValue) {\n    let fromStorage = localStorage.getItem(byField);\n\n    if (fromStorage) {\n      fromStorage = JSON.parse(fromStorage);\n    } else {\n      fromStorage = elseValue;\n    }\n\n    return fromStorage;\n  }\n\n  render() {\n    let {field, currentScore, bestScore, isLose, isWin} = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <div className=\"App-nav-status-bar\">\n            <span className=\"App-nav-status-bar-2048-label\">\n              2048\n            </span>\n            <div className=\"App-nav-status-bar-score-table\">\n              <div className=\"App-nav-status-bar-score-table-cur\">\n                <p>SCORE</p>\n                <span>{currentScore}</span>\n              </div>\n              <div className=\"App-nav-status-bar-score-table-best\">\n                <p>BEST</p>\n                <span>{bestScore}</span>\n              </div>\n            </div>\n          </div>\n          <p className=\"App-nav-restart-bar\">\n            <span className=\"App-nav-restart-bar-join-label\">\n              Join the numbers and get to the <b>2048 tile!</b>\n            </span>\n            <button\n              className=\"App-nav-restart-bar-join-btn\"\n              onClick={() => this.newGameHandler()}\n            >\n              New Game\n            </button>\n          </p>\n        </div>\n        <div className=\"App-field\">\n          {isLose && (\n            <div className=\"App-field-lose-modal\">\n              <div className=\"App-field-lose-modal-message\">\n                <p>Game over!</p>\n                <button\n                  onClick={() => this.newGameHandler()}\n                >\n                  Try again\n                </button>\n              </div>\n            </div>\n          )}\n\n          {(isWin === 'true') && (\n            <div className=\"App-field-win-modal\">\n              <div className=\"App-field-win-modal-message\">\n                <p>You win!</p>\n                <button\n                  onClick={() => this.keepGoingHandler()}\n                >\n                  Keep going\n                </button>\n                <button\n                  onClick={() => this.newGameHandler()}\n                >\n                  Try again\n                </button>\n              </div>\n            </div>\n          )}\n\n          {\n            field.map((row, i) => {\n              return (<div key={`row ${i}`} className=\"App-field-row\">\n\n                {\n                  row.map((cell, j) => {\n                    return (\n                      <div key={`cell ${i}_${j}`} className=\"App-field-cell\">\n\n                        {\n                          (cell > 0) &&\n                          <div\n                            className=\"App-field-cell-tile\"\n                            data-tile-value={cell}\n                          >\n                            {cell}\n                          </div>\n                        }\n\n                      </div>\n                    )\n                  })\n                }\n\n              </div>)\n            })\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}