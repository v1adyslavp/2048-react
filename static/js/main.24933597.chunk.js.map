{"version":3,"sources":["App.js","index.js"],"names":["App","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","props","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","field","getField","currentScore","getCurrentScore","bestScore","getBestScore","isGameActive","isWin","getWinStatusFromStorage","isLose","getLoseStatusFromStorage","handleKeyUp","bind","assertThisInitialized","document","addEventListener","removeEventListener","spawnTiles","setState","count","_this2","freeCells","finalCells","row","col","push","i","cellToSpawn","Math","floor","random","splice","prevState","newField","toConsumableArray","_i","_finalCells","cell","_cell","slicedToArray","getNewTileValue","console","warn","localStorage","setItem","isActive","JSON","stringify","event","key","includes","handleMove","moveKey","_this3","fieldAfterMove","shiftedRow","filter","collapseSameTiles","unshift","transcendedField","isEqual","log","direction","_this4","collapsableRow","_loop","isWinStatus","nextScore","_loop2","pendingField","_this5","getItem","savedField","parse","isLoseStatus","_this6","_this$state","react_default","a","createElement","className","onClick","newGameHandler","keepGoingHandler","map","j","data-tile-value","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.24933597.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {isEqual} from 'lodash';\n\nclass App extends Component {\n  constructor(...props) {\n    super(...props);\n\n    this.state = {\n      field: this.getField(),\n      currentScore: this.getCurrentScore(),\n      bestScore: this.getBestScore(),\n      isGameActive: this.isGameActive(),\n      isWin: this.getWinStatusFromStorage(),\n      isLose: this.getLoseStatusFromStorage(),\n    };\n\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  componentWillMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentDidMount() {\n    let {isGameActive} = this.state;\n\n    if (!isGameActive) {\n      this.spawnTiles(2);\n      this.setState({isGameActive: true})\n    }\n  }\n\n  spawnTiles(count) {\n    let {field} = this.state;\n    let freeCells = [];\n    let finalCells = [];\n\n    for (let row = 0; row<4; row++) {\n      for (let col = 0; col<4; col++) {\n        if (field[row][col] === 0) {\n          freeCells.push([row, col])\n        }\n      }\n    }\n\n    for (let i = 0; i < count; i++) {\n      let cellToSpawn = Math.floor(Math.random() * freeCells.length);\n\n      finalCells.push(freeCells.splice(cellToSpawn, 1)[0]);\n    }\n\n    this.setState(prevState => {\n      let newField = [...prevState.field];\n\n      for (let cell of finalCells) {\n        let [row, col] = cell;\n        newField[row][col] = this.getNewTileValue();\n      }\n\n      return {\n        field: newField\n      }\n    }, () => {\n      let {field} = this.state;\n\n      if (this.isLose(field)) {\n        console.warn('You Lose');\n        localStorage.setItem('isLose', 'true');\n\n        this.setState({\n          isLose: true,\n          isActive: false\n        });\n      }\n\n      localStorage.setItem('field', JSON.stringify(field));\n      localStorage.setItem('isActive', 'true');\n    })\n\n  }\n\n  getNewTileValue() {\n    let number = Math.floor(Math.random() * 10) + 1;\n\n    if (number === 1) {\n      return 4;\n    } else {\n      return 2;\n    }\n  }\n\n  handleKeyUp(event) {\n    let availableKeys = ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n    let {key} = event;\n\n    if (!availableKeys.includes(key)) {\n      return;\n    }\n\n    this.handleMove(key);\n  }\n\n  handleMove(moveKey) {\n    let {field} = this.state;\n    let fieldAfterMove = [];\n\n    if (moveKey === 'ArrowRight' || moveKey === 'ArrowLeft') {\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = field[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowRight') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowLeft') {\n            shiftedRow.push(0);\n          }\n        }\n\n        fieldAfterMove.push(shiftedRow);\n      }\n    } else if (moveKey === 'ArrowUp' || moveKey === 'ArrowDown') {\n      let transcendedField = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          if (field[row][col] !== 0) {\n            transcendedField[col].push(field[row][col]);\n          }\n        }\n      }\n\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = transcendedField[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowDown') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowUp') {\n            shiftedRow.push(0);\n          }\n        }\n\n        transcendedField[row] = shiftedRow;\n      }\n\n      fieldAfterMove = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          fieldAfterMove[row].push(\n            transcendedField[col][row]\n          );\n        }\n      }\n    }\n\n    if (isEqual(field, fieldAfterMove)) {\n      console.log('no move');\n      return;\n    }\n\n    this.setState({field: fieldAfterMove}, () => {\n      this.spawnTiles(1);\n    });\n\n  }\n\n  collapseSameTiles(row, direction) {\n    let collapsableRow = [...row];\n\n    if (direction === 'ArrowRight' || direction === 'ArrowDown') {\n      for (let i = collapsableRow.length - 1; i > 0; i--) {\n        if (collapsableRow[i] === collapsableRow[i-1]) {\n          collapsableRow[i] += collapsableRow[i];\n          collapsableRow[i-1] = 0;\n\n          this.setState((prevState) => {\n            let isWinStatus;\n            let nextScore = prevState.currentScore + collapsableRow[i];\n            localStorage.setItem('currentScore', nextScore);\n\n            if (nextScore > prevState.bestScore) {\n              localStorage.setItem('bestScore', nextScore);\n            }\n\n            if (prevState.isWin === 'false' && collapsableRow[i] === 2048) {\n              isWinStatus = 'true';\n            } else if (prevState.isWin === 'keep') {\n              isWinStatus = 'keep';\n            } else {\n              isWinStatus = prevState.isWin;\n            }\n\n            localStorage.setItem('isWin', isWinStatus);\n\n            return {\n              currentScore: nextScore,\n              bestScore: nextScore > prevState.bestScore ? nextScore : prevState.bestScore,\n              isWin: isWinStatus\n            }\n          });\n        }\n\n      }\n    } else if (direction === 'ArrowLeft' || direction === 'ArrowUp') {\n      for (let i = 0; i < collapsableRow.length - 1; i++) {\n        if (collapsableRow[i] === collapsableRow[i+1]) {\n          collapsableRow[i] += collapsableRow[i];\n          collapsableRow[i+1] = 0;\n\n          this.setState((prevState) => {\n            let isWinStatus;\n            let nextScore = prevState.currentScore + collapsableRow[i];\n            localStorage.setItem('currentScore', nextScore);\n\n            if (nextScore > prevState.bestScore) {\n              localStorage.setItem('bestScore', nextScore);\n            }\n\n            if (prevState.isWin === 'false' && collapsableRow[i] === 2048) {\n              isWinStatus = 'true';\n            } else if (prevState.isWin === 'keep') {\n              isWinStatus = 'keep';\n            } else {\n              isWinStatus = prevState.isWin;\n            }\n\n            localStorage.setItem('isWin', isWinStatus);\n\n            return {\n              currentScore: nextScore,\n              bestScore: nextScore > prevState.bestScore ? nextScore : prevState.bestScore,\n              isWin: isWinStatus\n            }\n          });\n        }\n      }\n    }\n\n    collapsableRow = collapsableRow.filter(col => col > 0);\n\n    return collapsableRow;\n  }\n\n  isLose(pendingField) {\n    for (let row=0; row<4; row++) {\n      for (let col=0; col<4; col++) {\n        if (pendingField[row][col] === 0) {\n          console.log('ne pysto');\n          return false\n        }\n\n        if (pendingField[row][col] === pendingField[row][col+1]) {\n          console.log(`v stolbe ${row+1}:${col+1} - ${row+1}-${col+2} (${pendingField[row][col] })(${pendingField[row][col+1]})`);\n          return false;\n        }\n\n        if (row === 3) {\n          continue\n        }\n\n        if (pendingField[row][col] === pendingField[row+1][col]) {\n          console.log(`v stolbe ${row+1}:${col+1} - ${row+2}-${col+1} (${pendingField[row][col] })(${pendingField[row+1][col]})`);\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  newGameHandler() {\n    localStorage.setItem('currentScore', '0');\n    localStorage.setItem('isWin', 'false');\n    localStorage.setItem('isLose', 'false');\n\n    this.setState({\n      field: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      currentScore: 0,\n      isWin: false,\n      isLose: false,\n    }, () => {\n      this.spawnTiles(2);\n    });\n  }\n\n  keepGoingHandler() {\n    localStorage.setItem('isWin', 'keep');\n\n    this.setState({\n      isWin: 'keep'\n    })\n  }\n\n  getCurrentScore() {\n    let currentScore = localStorage.getItem('currentScore');\n\n    return +currentScore || 0;\n  }\n\n  getBestScore() {\n    let bestScore = localStorage.getItem('bestScore');\n\n    return bestScore || 0;\n  }\n\n  getField() {\n    let savedField = localStorage.getItem('field');\n\n    if (savedField) {\n      savedField = JSON.parse(savedField);\n    } else {\n      savedField = [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ]\n    }\n\n    return savedField;\n  }\n\n  isGameActive() {\n    let isActive = localStorage.getItem('isActive');\n\n    if (isActive) {\n      isActive = JSON.parse(isActive);\n    } else {\n      isActive = false\n    }\n\n    return isActive;\n  }\n\n  getLoseStatusFromStorage() {\n    let isLoseStatus = localStorage.getItem('isLose');\n\n    if (isLoseStatus) {\n      isLoseStatus = JSON.parse(isLoseStatus);\n    } else {\n      isLoseStatus = false\n    }\n\n    return isLoseStatus;\n  }\n\n  getWinStatusFromStorage() {\n    let isWinStatus = localStorage.getItem('isWin');\n\n    return isWinStatus || 'false';\n  }\n\n  render() {\n    let {field, currentScore, bestScore, isLose, isWin} = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-nav\">\n          <div className=\"App-nav-status-bar\">\n            <span className=\"App-nav-status-bar-2048-label\">\n              2048\n            </span>\n            <div className=\"App-nav-status-bar-score-table\">\n              <div className=\"App-nav-status-bar-score-table-cur\">\n                <p>SCORE</p>\n                <span>{currentScore}</span>\n              </div>\n              <div className=\"App-nav-status-bar-score-table-best\">\n                <p>BEST</p>\n                <span>{bestScore}</span>\n              </div>\n            </div>\n          </div>\n          <p className=\"App-nav-restart-bar\">\n            <span className=\"App-nav-restart-bar-join-label\">\n              Join the numbers and get to the <b>2048 tile!</b>\n            </span>\n            <button\n              className=\"App-nav-restart-bar-join-btn\"\n              onClick={() => this.newGameHandler()}\n            >\n              New Game\n            </button>\n          </p>\n        </div>\n        <div className=\"App-field\">\n          {isLose && (\n            <div className=\"App-field-lose-modal\">\n              <div className=\"App-field-lose-modal-message\">\n                <p>Game over!</p>\n                <button\n                  onClick={() => this.newGameHandler()}\n                >\n                  Try again\n                </button>\n              </div>\n            </div>\n          )}\n\n          {(isWin === 'true') && (\n            <div className=\"App-field-win-modal\">\n              <div className=\"App-field-win-modal-message\">\n                <p>You win!</p>\n                <button\n                  onClick={() => this.keepGoingHandler()}\n                >\n                  Keep going\n                </button>\n                <button\n                  onClick={() => this.newGameHandler()}\n                >\n                  Try again\n                </button>\n              </div>\n            </div>\n          )}\n\n          {\n            field.map((row, i) => {\n              return (<div key={`row ${i}`} className=\"App-field-row\">\n\n                {\n                  row.map((cell, j) => {\n                    return (\n                      <div key={`cell ${i}_${j}`} className=\"App-field-cell\">\n\n                        {\n                          (cell > 0) &&\n                          <div\n                            className=\"App-field-cell-tile\"\n                            data-tile-value={cell}\n                          >\n                            {cell}\n                          </div>\n                        }\n\n                      </div>\n                    )\n                  })\n                }\n\n              </div>)\n            })\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}