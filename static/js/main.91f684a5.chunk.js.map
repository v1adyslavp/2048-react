{"version":3,"sources":["App.js","index.js"],"names":["App","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","props","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","field","isGameActive","isWin","isLose","handleKeyUp","bind","assertThisInitialized","document","addEventListener","removeEventListener","spawnTiles","setState","count","_this2","freeCells","finalCells","row","col","push","i","cellToSpawn","Math","floor","random","splice","prevState","newField","toConsumableArray","_i","_finalCells","cell","_cell","slicedToArray","getNewTileValue","console","warn","event","key","includes","handleMove","moveKey","_this3","fieldAfterMove","shiftedRow","filter","collapseSameTiles","unshift","transcendedField","isEqual","log","direction","collapsedRow","pendingField","react_default","a","createElement","className","map","j","Component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.91f684a5.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {isEqual} from 'lodash';\n\nclass App extends Component {\n  constructor(...props) {\n    super(...props);\n\n    this.state = {\n      field: [\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n        [0, 0, 0, 0],\n      ],\n      isGameActive: false,\n      isWin: false,\n      isLose: false,\n    };\n\n    this.handleKeyUp = this.handleKeyUp.bind(this);\n  }\n\n  componentWillMount() {\n    document.addEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  componentDidMount() {\n    let {isGameActive} = this.state;\n\n    if (!isGameActive) {\n      this.spawnTiles(2);\n      this.setState({isGameActive: true})\n    }\n  }\n\n  spawnTiles(count) {\n    let {field} = this.state;\n    let freeCells = [];\n    let finalCells = [];\n\n    for (let row = 0; row<4; row++) {\n      for (let col = 0; col<4; col++) {\n        if (field[row][col] === 0) {\n          freeCells.push([row, col])\n        }\n      }\n    }\n\n    for (let i = 0; i < count; i++) {\n      let cellToSpawn = Math.floor(Math.random() * freeCells.length);\n\n      finalCells.push(freeCells.splice(cellToSpawn, 1)[0]);\n    }\n\n    this.setState(prevState => {\n      let newField = [...prevState.field];\n\n      for (let cell of finalCells) {\n        let [row, col] = cell;\n        newField[row][col] = this.getNewTileValue();\n      }\n\n      return {\n        field: newField\n      }\n    }, () => {\n      let {field} = this.state;\n\n      if (this.isLose(field)) {\n        console.warn('You Lose');\n        this.setState({isLose: true});\n      }\n    })\n\n  }\n\n  getNewTileValue() {\n    let number = Math.floor(Math.random() * 10) + 1;\n\n    if (number === 1) {\n      return 4;\n    } else {\n      return 2;\n    }\n  }\n\n  handleKeyUp(event) {\n    let availableKeys = ['ArrowDown', 'ArrowUp', 'ArrowLeft', 'ArrowRight'];\n    let {key} = event;\n\n    if (!availableKeys.includes(key)) {\n      return;\n    }\n\n    this.handleMove(key);\n  }\n\n  handleMove(moveKey) {\n    let {field} = this.state;\n    let fieldAfterMove = [];\n\n    if (moveKey === 'ArrowRight' || moveKey === 'ArrowLeft') {\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = field[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowRight') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowLeft') {\n            shiftedRow.push(0);\n          }\n        }\n\n        fieldAfterMove.push(shiftedRow);\n      }\n    } else if (moveKey === 'ArrowUp' || moveKey === 'ArrowDown') {\n      let transcendedField = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          if (field[row][col] !== 0) {\n            transcendedField[col].push(field[row][col]);\n          }\n        }\n      }\n\n      for (let row = 0; row<4; row++) {\n        let shiftedRow = transcendedField[row].filter(col => col > 0);\n\n        shiftedRow = this.collapseSameTiles(shiftedRow, moveKey);\n\n        while (shiftedRow.length < 4) {\n          if (moveKey === 'ArrowDown') {\n            shiftedRow.unshift(0);\n          } else if (moveKey === 'ArrowUp') {\n            shiftedRow.push(0);\n          }\n        }\n\n        transcendedField[row] = shiftedRow;\n      }\n\n      fieldAfterMove = [[],[],[],[]];\n\n      for (let row = 0; row<4; row++) {\n        for (let col = 0; col<4; col++) {\n          fieldAfterMove[row].push(\n            transcendedField[col][row]\n          );\n        }\n      }\n    }\n\n    if (isEqual(field, fieldAfterMove)) {\n      console.log('no move');\n      return;\n    }\n\n    this.setState({field: fieldAfterMove}, () => {\n      this.spawnTiles(1);\n    });\n\n  }\n\n  collapseSameTiles(row, direction) {\n    let collapsedRow = [...row];\n\n    if (direction === 'ArrowRight' || direction === 'ArrowDown') {\n      for (let i = collapsedRow.length - 1; i > 0; i--) {\n        if (collapsedRow[i] === collapsedRow[i-1]) {\n          collapsedRow[i] += collapsedRow[i];\n          collapsedRow[i-1] = 0;\n        }\n\n        if (collapsedRow[i] === 2048) {\n          this.setState({isWin: true});\n        }\n      }\n    } else if (direction === 'ArrowLeft' || direction === 'ArrowUp') {\n      for (let i = 0; i < collapsedRow.length - 1; i++) {\n        if (collapsedRow[i] === collapsedRow[i+1]) {\n          collapsedRow[i] += collapsedRow[i];\n          collapsedRow[i+1] = 0;\n        }\n\n        if (collapsedRow[i] === 2048) {\n          this.setState({isWin: true});\n        }\n      }\n    }\n\n    collapsedRow = collapsedRow.filter(col => col > 0);\n\n    return collapsedRow;\n  }\n\n  isLose(pendingField) {\n    for (let row=0; row<4; row++) {\n      for (let col=0; col<4; col++) {\n        if (pendingField[row][col] === 0) {\n          console.log('ne pysto');\n          return false\n        }\n\n        if (pendingField[row][col] === pendingField[row][col+1]) {\n          console.log(`v stolbe ${row+1}:${col+1} - ${row+1}-${col+2} (${pendingField[row][col] })(${pendingField[row][col+1]})`);\n          return false;\n        }\n\n        if (row === 3) {\n          continue\n        }\n\n        if (pendingField[row][col] === pendingField[row+1][col]) {\n          console.log(`v stolbe ${row+1}:${col+1} - ${row+2}-${col+1} (${pendingField[row][col] })(${pendingField[row+1][col]})`);\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    let {field} = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App-field\">\n\n          {\n            field.map((row, i) => {\n              return (<div key={`row ${i}`} className=\"App-field-row\">\n\n                {\n                  row.map((cell, j) => {\n                    return (\n                      <div key={`cell ${i}_${j}`} className=\"App-field-cell\">\n\n                        {\n                          (cell > 0) &&\n                          <div className=\"App-field-cell-tile\">\n                            {cell}\n                          </div>\n                        }\n\n                      </div>\n                    )\n                  })\n                }\n\n              </div>)\n            })\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}